* Interleave adapted to org-ref and helm-bibtex

First, You can find a more comprehensive introduction of this package in [[https://github.com/rudolfochrist/interleave][interleave]]. I forked it from the orignal author rudolfochrist. Thanks rudolfochrist for giving us this great package.

So the package was modified on the top of [[github:rudolfochrist/interleave][rudolfochrist/interleave]] with a different approach, supply of new features and some issue fix. The biggest difference between these two is that you need to setup the pdf path in the orignal interleave, but no need in current one. The orignal one gets the pdf path from a =INTERLEAVE_PDF= property of entry headline which should be configured manually. This one can deal with the pdf closely combined with two great packages [[https://github.com/jkitchin/org-ref][org-ref]] and [[https://github.com/tmalsburg/helm-bibtex][helm-bibtex]], which have got them great reputation in the emacs bibtex management community. This package ensure to make interleave work with them flawlessly. 

* Installation
t agri
Since it has changed a lot of codes from the orignal one, and offers another algorithm different from orignal one, but with same name, I cannot submit it to the melpa repository. You can simply clone it by:

#+BEGIN_EXAMPLE
git clone https://github.com/llcc/interleave
#+END_EXAMPLE

and load it:

#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "Your interleave path")
(require 'interleave)
#+END_SRC

* Usage

If you use org-ref or helm-bibtex, you should have configured your own pdf and notes path. Helm-bibtex supports two kinds of note files: notes file per bibtex entry and multiple entry notes in one single file. This package only considers the multiple notes. If you make notes every single bibtex entry, you should not consider to use it. Of course, it is not hard to bring up this new functionality to compatible with multiple notes file, but it is not on my high priority. If you need this, please report it in the issue.

** Start to interleave
After you create a note headline by =helm-bibtex=, this headline should have already had a propery called =Custom_ID= with the bibtex entry key.

#+BEGIN_EXAMPLE
:* Schi(2001): Notes of a bibtex entry
:  :PROPERTIES:
:  :Custom_ID: jaap-2001-fatig
:  :END:
#+END_EXAMPLE

Then start here by (note: you need to put your cursor everywhere in scope of the headline): 

#+BEGIN_EXAMPLE
M-x interleave
#+END_EXAMPLE

** Navigation

You can use @@html:<kbd>@@n@@html:</kbd>@@, @@html:<kbd>@@p@@html:</kbd>@@, @@html:<kbd>@@SPC@@html:</kbd>@@, @@html:<kbd>@@S-SPC@@html:</kbd>@@ to navigate the pdf, and synchronise pdf page and note by @@html:<kbd>@@M-.@@html:</kbd>@@, @@html:<kbd>@@M-p@@html:</kbd>@@, @@html:<kbd>@@M-n@@html:</kbd>@@. Quit by @@html:<kbd>@@q@@html:</kbd>@@.
** New notes for current pdf page

Press @@html:<kbd>@@i@@html:</kbd>@@ to new a subnote for current pdf page. A property named with the combination of entry key and "page", i.e. =jaap-2001-fatig-page=, and page number.

#+BEGIN_SRC org
:** Notes for page [[file:/jaap-2001-fatig.pdf::54][54]] 
:   :PROPERTIES:
:   :jaap-2001-fatig-page: 54
:   :END:
#+END_SRC

Changing the page of the PDF will also narrow to the notes for this particular PDF page. If no notes exist for current pdf page, overview of all the pages notes will be shown in the notes buffer.

You may have noticed the link: =[[file:/jaap-2001-fatig.pdf::54][54]]=. If you have sumatrapdf installed, you can open the pdf in the sumatrapdf, which can let you to view the pdf comments externally.

** Customize

You can customize the pdf buffer width by:

#+BEGIN_SRC emacs-lisp :tangle yes
(setq interleave--window-split-width 150)
#+END_SRC

or page property suffix

#+BEGIN_SRC emacs-lisp :tangle yes
(setq interleave--page-property-suffix "page-number")
#+END_SRC

Currently, =pdf-tools= has not been supported yet, but it is on the table. 

Any ideas and suggestion about the package is welcomed and appreciated!


